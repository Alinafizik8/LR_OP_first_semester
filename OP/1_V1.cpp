#include <iostream>//подключение возможности работы с вводом и выводом
using namespace std;//указываем компилятору импортировать все имена из пространства имен std в текущую область видимости

double check() //функция проверки вводимых данных
{
    double number;//объявление переменной
    cin >> number;//ввод переменной с клавиатуры
    if (!cin)//условие несоответствия типа вводимой переменной с нужным нам
    {
        cout << "Input Error! Invalid type! Please, enter again:";//вывод информации об ошибке
        cin.clear();//сброс битов ошибок входного стандартного потока
        cin.ignore(numeric_limits<streamsize>::max(), '\n');//очищает буфер ввода, чтобы предотвратить вмешательство оставшихся символов в будущие операции ввода
        return check();//запуск функции заново
    }
    return number;//возвращение введенной переменной в случае соответствия ее типа нужному
}

int main()//вход в программу
{
    string answer;//объявление переменной для записи ответа пользователя
    double perimeter;//объявление переменной для вычисления периметра многоугольника
    perimeter = 0;//присвоение периметру значения 0
    do //начало цикла
    {
        perimeter = 0;//обнуление переменной perimeter чтобы прошлый периметр не суммировался с новым
        cout << "Enter the number of sides: ";//Запрос пользователю на ввод колличества сторон
        double number_of_parties = check();//проверка переменной на соответствие типу
        while (number_of_parties < 3)//проверка на адекватность, так как количество сторон не может быть меньше 3
        {
            cout << "The number of sides can not be less than three, please, enter the number of sides again: ";//вывод информации об ошибке
            number_of_parties = check();//
        }
        for (int i = 1; i <= number_of_parties; i++)//цикл, запрашивающий ввод длин сторон, колличество которых равно введенному пользователем ранее
        {
            cout << "Enter the length of the side: ";//Запрос пользователю на ввод длины стороны
            double storona = check();//запрос на ввод переменной и проверка переменной на соответствие типу и на адекатность
            while (storona <= 0)//проверка на адекватность, так как сторона не может быть <=0
            {
                cout << "Input Error! Please, enter the length of the side again:";//вывод информации об ошибке
                storona = check();//запрос на ввод переменной и проверка переменной на соответствие типу и на адекатность
            }
            perimeter += storona;//увеличение периметра на величину стороны
        }
        double average_value_sides = perimeter / number_of_parties;//нахождение среднего арифметического введенных сторон
        cout << "Perimeter = " << perimeter << endl;//вывод значения периметра
        cout << "Average value of the sides = " << average_value_sides << endl;//вывод среднего арифметического всех сторон
        cout << "Do you want to continue the program(y or n): "; cin >> answer;//возможность запустить программу заново по желанию пользователя
        while (answer!="y" && answer!="n")//проверка соответствия ответа пользователя доступным вариантам
        {
            cout << "Please, answer y or n. Do you want to continue the program(y or n)?";//запрос на повторный ввод ответа
            cin.clear();//сброс битов ошибок входного стандартного потока
            cin.ignore(numeric_limits<streamsize>::max(), '\n');//очищает буфер ввода, чтобы предотвратить вмешательство оставшихся символов в будущие операции ввода
            cin >> answer;//повторный ввод ответа
        }
        if (answer == "y")
        {
            cout << endl;//добавление отступа между программами для красоты
        }
    } while (answer == "y");//условия для запуска программы заново
    return 0;//возврат 0 и выход из программы в случае отказа пользователя от продолжения использования программы
}
